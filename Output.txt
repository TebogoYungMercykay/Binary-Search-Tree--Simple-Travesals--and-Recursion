tebogoyungmercykay@TebogoYungMercykay:/mnt/c/Users/Sello Tebogo/Documents/BST$ make
javac *.java
tebogoyungmercykay@TebogoYungMercykay:/mnt/c/Users/Sello Tebogo/Documents/BST$ make run
java App
-------------- TEST 0 - NORMAL STUFF -------------
Tree Height
1

Tree Number of Leaves
3

Depth First Traversal
L[null]<-[1]->R[null]
L[1]<-[2]->R[3]
L[null]<-[3]->R[null]

Find parent of [3]
L[1]<-[2]->R[3]

Find [1]
L[1]<-[2]->R[3]
L[null]<-[1]->R[null]

Contains [5]
L[1]<-[2]->R[3]
L[null]<-[3]->R[null]
-------------------- THE END ---------------------
-------- TEST 1 - MIRRORED: NORMAL STUFF ---------
Tree Height
1

Tree Number of Leaves
3

Depth First Traversal
L[null]<-[1]->R[null]
L[3]<-[2]->R[1]
L[null]<-[3]->R[null]

Find parent of [3]
L[3]<-[2]->R[1]

Find [1]
L[3]<-[2]->R[1]
L[null]<-[1]->R[null]

Contains [5]
L[3]<-[2]->R[1]
L[null]<-[3]->R[null]
-------------------- THE END ---------------------

----------- TEST 2 - STANDARD TREE ---------------
Tree Height
2

Tree Number of Leaves
7

Depth First Traversal
L[null]<-[2]->R[null]
L[2]<-[3]->R[4]
L[null]<-[4]->R[null]
L[3]<-[5]->R[7]
L[null]<-[6]->R[null]
L[6]<-[7]->R[8]
L[null]<-[8]->R[null]

Find parent of [5]
L[3]<-[5]->R[7]

Find parent of [3]
L[3]<-[5]->R[7]

Find parent of [4]
L[3]<-[5]->R[7]
L[2]<-[3]->R[4]

Find parent of [8]
L[3]<-[5]->R[7]
L[6]<-[7]->R[8]

Find [5]
L[3]<-[5]->R[7]
L[2]<-[3]->R[4]
L[null]<-[2]->R[null]

Find [2]
L[3]<-[5]->R[7]
L[2]<-[3]->R[4]
L[null]<-[2]->R[null]

Find [7]
L[3]<-[5]->R[7]
L[2]<-[3]->R[4]
L[null]<-[2]->R[null]

Contains [5]
L[3]<-[5]->R[7]

Contains [9]
L[3]<-[5]->R[7]
L[6]<-[7]->R[8]
L[null]<-[8]->R[null]

Contains [6]
L[3]<-[5]->R[7]
L[6]<-[7]->R[8]
L[null]<-[6]->R[null]

Contains [4]
L[3]<-[5]->R[7]
L[2]<-[3]->R[4]
L[null]<-[4]->R[null]

Contains [2]
L[3]<-[5]->R[7]
L[2]<-[3]->R[4]
L[null]<-[2]->R[null]

Contains [3]
L[3]<-[5]->R[7]
L[2]<-[3]->R[4]

Contains [7]
L[3]<-[5]->R[7]
L[6]<-[7]->R[8]

Contains [1]
L[3]<-[5]->R[7]
L[2]<-[3]->R[4]
L[null]<-[2]->R[null]

Perfectly Balanced

-------------------- THE END ---------------------

----------- TEST 3 - MIRRORED TREE ---------------
Tree Height
2

Tree Number of Leaves
7

Depth First Traversal
L[null]<-[2]->R[null]
L[4]<-[3]->R[2]
L[null]<-[4]->R[null]
L[7]<-[5]->R[3]
L[null]<-[6]->R[null]
L[8]<-[7]->R[6]
L[null]<-[8]->R[null]

Find parent of [5]
L[7]<-[5]->R[3]

Find parent of [3]
L[7]<-[5]->R[3]

Find parent of [4]
L[7]<-[5]->R[3]
L[4]<-[3]->R[2]

Find parent of [8]
L[7]<-[5]->R[3]
L[8]<-[7]->R[6]

Find [5]
L[7]<-[5]->R[3]
L[4]<-[3]->R[2]
L[null]<-[2]->R[null]

Find [2]
L[7]<-[5]->R[3]
L[4]<-[3]->R[2]
L[null]<-[2]->R[null]

Find [7]
L[7]<-[5]->R[3]
L[4]<-[3]->R[2]
L[null]<-[2]->R[null]

Contains [5]
L[7]<-[5]->R[3]

Contains [9]
L[7]<-[5]->R[3]
L[8]<-[7]->R[6]
L[null]<-[8]->R[null]

Contains [6]
L[7]<-[5]->R[3]
L[8]<-[7]->R[6]
L[null]<-[6]->R[null]

Contains [4]
L[7]<-[5]->R[3]
L[4]<-[3]->R[2]
L[null]<-[4]->R[null]

Contains [2]
L[7]<-[5]->R[3]
L[4]<-[3]->R[2]
L[null]<-[2]->R[null]

Contains [3]
L[7]<-[5]->R[3]
L[4]<-[3]->R[2]

Contains [7]
L[7]<-[5]->R[3]
L[8]<-[7]->R[6]

Contains [1]
L[7]<-[5]->R[3]
L[4]<-[3]->R[2]
L[null]<-[2]->R[null]

Perfectly Balanced

-------------------- THE END ---------------------
-------------- TEST 4 - NORMAL STUFF -------------
Tree Height
2

Tree Number of Leaves
7

Depth First Traversal
L[null]<-[2]->R[null]
L[2]<-[3]->R[4]
L[null]<-[4]->R[null]
L[3]<-[5]->R[7]
L[null]<-[6]->R[null]
L[6]<-[7]->R[8]
L[null]<-[8]->R[null]

Find parent of [3]
L[3]<-[5]->R[7]

Find parent of [4]
L[3]<-[5]->R[7]
L[2]<-[3]->R[4]

Find parent of [8]
L[3]<-[5]->R[7]
L[6]<-[7]->R[8]
-------------------- THE END ---------------------
-------------- TEST 5 - NORMAL STUFF -------------
Tree Height
2

Tree Number of Leaves
7

Depth First Traversal
L[null]<-[2]->R[null]
L[4]<-[3]->R[2]
L[null]<-[4]->R[null]
L[7]<-[5]->R[3]
L[null]<-[6]->R[null]
L[8]<-[7]->R[6]
L[null]<-[8]->R[null]

Find parent of [3]
L[7]<-[5]->R[3]

Find parent of [4]
L[7]<-[5]->R[3]
L[4]<-[3]->R[2]

Find parent of [8]
L[7]<-[5]->R[3]
L[8]<-[7]->R[6]
-------------------- THE END ---------------------